name: Android CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Clone repository
        uses: actions/checkout@v4

      - name: ☕ Install JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: 🔑 Make Gradlew executable
        run: chmod +x gradlew

      # 🔢 Auto-Increment versionCode
      - name: 🔢 Load and increment versionCode
        run: |
          VERSION_CODE=$(cat app/version.txt)
          NEW_VERSION_CODE=$((VERSION_CODE + 1))
          echo $NEW_VERSION_CODE > app/version.txt
          echo "VERSION_CODE=$NEW_VERSION_CODE" >> $GITHUB_ENV
          echo "VERSION_NAME=0.$NEW_VERSION_CODE" >> $GITHUB_ENV

      - name: 🛠️ Create the project (Gradle)
        run: ./gradlew assembleDebug

      - name: ✅ Perform tests
        run: ./gradlew test

      - name: 📦 Generate APK
        run: ./gradlew assembleRelease

      - name: 🔍 Check if APK exists
        run: ls -R app/build/outputs/apk/

      - name: 🔎 Show Gradle build logs (if error)
        if: failure()
        run: cat app/build/reports/build.log

      - name: 🚀 Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: app/build/outputs/apk/**/*.apk

      - name: 🔄 Push new versionCode to GitHub
        if: success() # Only if the build was successful!
        env:
          GH_PAT: ${{ secrets.GH_PAT }} # Personal Access Token
          #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://${{ github.actor }}:${GH_PAT}@github.com/${{ github.repository }}.git
          git status
          git stash --include-untracked || echo "No changes to stash"
          git pull --rebase origin main || echo "No rebase needed"
          git stash pop || echo "No stashed changes to apply"
          git add app/version.txt
          git commit -m "Auto-increment versionCode to $VERSION_CODE" || echo "No changes to commit"
          git push origin HEAD:main

      - name: 🔥 Firebase App Distribution Upload
        if: success() # Prevents faulty builds in Firebase App Distribution.
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.FIREBASE_CREDENTIALS }}
          groups: testers
          file: app/build/outputs/apk/debug/app-debug.apk #app/build/outputs/apk/release/app-release.apk
          releaseNotes: "Build ${{ env.VERSION_NAME }} - Automatically uploaded by GitHub CI/CD"
